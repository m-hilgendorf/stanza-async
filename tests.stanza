#use-added-syntax(tests)
defpackage stz/promise/test:
  import core
  import collections
  import stz/promise

deftest pend-then-resolve:
  val promise = 
    within promise = make-promise():
      pend(promise)
      resolve(promise, "fulfilled")
  #ASSERT(poll(promise) is PromisePending)
  #ASSERT(poll(promise) is PromisePending)
  val result = poll(promise) as PromiseResolved
  #ASSERT(value(result) as String == "fulfilled")

deftest thrown-exception-is-rejected:
  val promise = 
    within promise = make-promise():
      throw(Exception("Promise rejected"))
  #ASSERT(poll(promise) is PromisePending)
  #ASSERT(poll(promise) is PromiseRejected)

deftest async-await-sanity-check:
  val p1 =
    within await = async():
      "hello, async"
  val p2 = 
    within await = async():
      #ASSERT(await(p1) == "hello, async")
  
  #ASSERT(poll(p2) is PromisePending)
  #ASSERT(poll(p2) is PromisePending)
  #ASSERT(poll(p2) is PromiseResolved)
  